{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/components/Forms/AddOrEditProductForm/FormForAddOrEditProduct.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      className: \"label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputField\",\n      ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst MySelect = ({\n  label,\n  ...props\n}) => {\n  _s2();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      className: \"label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", { ...field,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MySelect;\n\nconst ProductForm = ({\n  handleSubmit,\n  state,\n  form\n}) => {\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    enableReinitialize: true,\n    initialValues: state,\n    validationSchema: Yup.object({\n      name: Yup.string().min(3, 'Required Min 3 symbols!!!').max(20, 'Max available 20 symbols!!!').required('Required!!!'),\n      price: Yup.number().typeError('Type error. Must be a number!!!').min(0, 'Negaive numbers doesn\\'t allowed!!!').required('Reqiured!!!'),\n      origin: Yup.string().oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\").required('Required!!!')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setSubmitting(true);\n      handleSubmit(values);\n      setSubmitting(false);\n      setTimeout(() => {\n        window.location.reload();\n      }, 1000);\n    },\n    children: ({\n      isSubmitting,\n      dirty,\n      resetForm\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      className: \"addProductForm\",\n      children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n        label: \"name\",\n        name: \"name\",\n        type: \"text\",\n        autoComplete: \"off\",\n        placeholder: \"Product Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n        label: \"price\",\n        name: \"price\",\n        type: \"text\",\n        className: \"inputField\",\n        autoComplete: \"off\",\n        placeholder: \"Product Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n        label: \"origin\",\n        name: \"origin\",\n        className: \"originsField\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          className: \"optionOrigin\",\n          children: \"Select origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ASIA\",\n          className: \"optionOrigin\",\n          children: \"ASIA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"USA\",\n          className: \"optionOrigin\",\n          children: \"USA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"EUROPE\",\n          className: \"optionOrigin\",\n          children: \"EUROPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"AFRICA\",\n          className: \"optionOrigin\",\n          children: \"AFRICA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), state.name !== '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitForm\",\n          disabled: isSubmitting || !dirty,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"resetFormButton\",\n          onClick: () => {\n            resetForm({\n              values: state\n            });\n          },\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancelChangesButton\",\n          onClick: () => {\n            form.current.style.display = '';\n            resetForm({\n              values: state\n            });\n          },\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 15\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitForm\",\n          disabled: isSubmitting || !dirty,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = ProductForm;\nexport default ProductForm;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MySelect\");\n$RefreshReg$(_c3, \"ProductForm\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/components/Forms/AddOrEditProductForm/FormForAddOrEditProduct.js"],"names":["React","Formik","Form","useField","Yup","MyTextInput","label","props","field","meta","id","name","touched","error","MySelect","ProductForm","handleSubmit","state","form","object","string","min","max","required","price","number","typeError","origin","oneOf","values","setSubmitting","setTimeout","window","location","reload","isSubmitting","dirty","resetForm","current","style","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\n\n\nconst MyTextInput = ({label, ...props}) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <label htmlFor={props.id || props.name} className=\"label\"></label>\n      <input className=\"inputField\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"errorMessage\">{meta.error}</div>\n      ): null}\n    </div>\n  )\n}\nconst MySelect = ({label, ...props}) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <label htmlFor={props.id || props.name} className=\"label\"></label>\n      <select {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"errorMessage\">{meta.error}</div>\n      ): null}\n    </div>\n  )\n}\n\nconst ProductForm = ({handleSubmit, state, form}) => {\n    return (\n        <Formik \n          enableReinitialize\n          initialValues={state}\n          validationSchema={Yup.object({\n            name: Yup.string()\n            .min(3, 'Required Min 3 symbols!!!')\n            .max(20, 'Max available 20 symbols!!!')\n            .required('Required!!!'),\n            price: Yup.number()\n              .typeError('Type error. Must be a number!!!')\n              .min(0, 'Negaive numbers doesn\\'t allowed!!!')\n              .required('Reqiured!!!'),\n            origin: Yup.string()\n              .oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\")\n              .required('Required!!!')\n          })}\n          onSubmit={(values, {setSubmitting} )=> {\n              setSubmitting(true)\n              handleSubmit(values)\n              setSubmitting(false)\n              setTimeout(() => {\n                window.location.reload()\n              }, 1000)\n          }}\n        >\n        {({ isSubmitting, dirty, resetForm }) => (\n          <Form className=\"addProductForm\">\n            <MyTextInput\n                label=\"name\"\n                name=\"name\" \n                type=\"text\" \n                autoComplete=\"off\"\n                placeholder=\"Product Name\" \n            />\n            <MyTextInput\n                label=\"price\"\n                name=\"price\" \n                type=\"text\" \n                className=\"inputField\" \n                autoComplete=\"off\"\n                placeholder=\"Product Price\" \n            />\n            <MySelect label=\"origin\" name=\"origin\" className=\"originsField\">\n              <option value=\"\" className=\"optionOrigin\">Select origin</option>\n              <option value=\"ASIA\" className=\"optionOrigin\">ASIA</option>\n              <option value=\"USA\" className=\"optionOrigin\">USA</option>\n              <option value=\"EUROPE\" className=\"optionOrigin\">EUROPE</option>\n              <option value=\"AFRICA\" className=\"optionOrigin\">AFRICA</option>\n            </MySelect>\n            {state.name !== '' ?\n              <div>\n                <button \n                  type=\"submit\" \n                  className=\"submitForm\"\n                  disabled={isSubmitting || !dirty}\n                >\n                  Submit\n                </button>\n                <button \n                  type=\"reset\" \n                  className=\"resetFormButton\"\n                  onClick={() => {\n                    resetForm({values: state})\n                  }}\n                >\n                  RESET\n                </button>\n                <button \n                  type=\"button\" \n                  className=\"cancelChangesButton\"\n                  onClick={() => {\n                    form.current.style.display = ''\n                    resetForm({values: state})\n                  }}\n                >\n                  CANCEL\n                </button>\n              </div> : \n              <div>\n                <button \n                  type=\"submit\" \n                  className=\"submitForm\"\n                  disabled={isSubmitting || !dirty}\n                >\n                  Submit\n                </button>\n              </div>\n            }\n          </Form>\n        )}\n        </Formik>\n    )\n}\n\nexport default ProductForm"]},"metadata":{},"sourceType":"module"}