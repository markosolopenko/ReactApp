{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nexport const Context = /*#__PURE__*/React.createContext();\nexport const ACTIONS = {\n  ADD_TO_CART: 'add-to-cart'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_TO_CART:\n      return state.count + 1, state.sum + action.payload.value;\n    // return [state[0] + action.payload.value, state[1] + 1]   \n\n    default:\n      return state;\n  }\n};\n\nexport const HandleDetail = props => {\n  _s();\n\n  const [{\n    state\n  }, dispatch] = useReducer(reducer, {\n    sum: 0,\n    count: 0\n  });\n  const [detailsCount, setDetailsCount] = useState(0);\n  const [product, setProduct] = useState({});\n  const [sumOfAdded, setSumOfAdded] = useState(0);\n  const [cart, setCart] = useState([]);\n  const values = {\n    state,\n    dispatch,\n    sumOfAdded,\n    setSumOfAdded,\n    product,\n    setProduct,\n    detailsCount,\n    setDetailsCount,\n    cart,\n    setCart\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleDetail, \"duZxf9ai2+zLI5P054CjM2L4nnU=\");\n\n_c = HandleDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleDetail\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/context/Context.js"],"names":["React","useState","useReducer","Context","createContext","ACTIONS","ADD_TO_CART","reducer","state","action","type","count","sum","payload","value","HandleDetail","props","dispatch","detailsCount","setDetailsCount","product","setProduct","sumOfAdded","setSumOfAdded","cart","setCart","values","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAGA,OAAO,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAAhB;;AAKP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,OAAO,CAACC,WAAb;AACI,aAAOE,KAAK,CAACG,KAAN,GAAc,CAAd,EAAiBH,KAAK,CAACI,GAAN,GAAYH,MAAM,CAACI,OAAP,CAAeC,KAAnD;AACA;;AACJ;AACI,aAAON,KAAP;AALR;AAOH,CARD;;AAUA,OAAO,MAAMO,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAAC;AAACR,IAAAA;AAAD,GAAD,EAAUS,QAAV,IAAsBf,UAAU,CAACK,OAAD,EAAU;AAACK,IAAAA,GAAG,EAAE,CAAN;AAASD,IAAAA,KAAK,EAAE;AAAhB,GAAV,CAAtC;AAGA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkClB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACqB,UAAD,EAAaC,aAAb,IAA8BtB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACuB,IAAD,EAAOC,OAAP,IAAkBxB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMyB,MAAM,GAAG;AACXlB,IAAAA,KADW;AACJS,IAAAA,QADI;AACMK,IAAAA,UADN;AACkBC,IAAAA,aADlB;AAEXH,IAAAA,OAFW;AAEFC,IAAAA,UAFE;AAEUH,IAAAA,YAFV;AAEwBC,IAAAA,eAFxB;AAGXK,IAAAA,IAHW;AAGLC,IAAAA;AAHK,GAAf;AAKA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,MAAzB;AAAA,cACKV,KAAK,CAACW;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMZ,Y;;KAAAA,Y","sourcesContent":["import React, {useState, useReducer} from 'react'\n\n\nexport const Context = React.createContext();\n\nexport const ACTIONS = {\n    ADD_TO_CART: 'add-to-cart',\n    \n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case ACTIONS.ADD_TO_CART:\n            return state.count + 1, state.sum + action.payload.value\n            // return [state[0] + action.payload.value, state[1] + 1]   \n        default:\n            return state;\n    }\n}\n\nexport const HandleDetail = (props) => {\n    const [{state}, dispatch] = useReducer(reducer, {sum: 0, count: 0}) \n\n\n    const [detailsCount, setDetailsCount] = useState(0)\n    const [product, setProduct] = useState({})\n    const [sumOfAdded, setSumOfAdded] = useState(0);\n    const [cart, setCart] = useState([])\n    const values = {\n        state, dispatch, sumOfAdded, setSumOfAdded,\n        product, setProduct, detailsCount, setDetailsCount,\n        cart, setCart\n    }\n    return (\n        <Context.Provider value={values}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}