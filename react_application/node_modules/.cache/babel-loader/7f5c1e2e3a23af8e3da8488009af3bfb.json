{"ast":null,"code":"import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getProducts } from '../api/getProducts';\nimport { fetchProducts } from '../features/productsSlice'; // import { useSelector } from 'react-redux';\n\nfunction* workerFetchProducts() {\n  // const store = useSelector(state => state)\n  // const {productsSlice} = store\n  const {\n    perPage,\n    page,\n    origins,\n    minPrice,\n    maxPrice\n  } = productsSlice;\n  const data = yield call(getProducts(perPage, page, origins, minPrice, maxPrice));\n  yield put(fetchProducts(data));\n}\n\nexport function* watchFetchProducts() {\n  yield takeEvery(fetchProducts, workerFetchProducts);\n}","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_application/src/redux-saga/productsSaga.js"],"names":["call","put","takeEvery","getProducts","fetchProducts","workerFetchProducts","perPage","page","origins","minPrice","maxPrice","productsSlice","data","watchFetchProducts"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,SAApB,QAAqC,oBAArC;AACA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,aAAT,QAA8B,2BAA9B,C,CACA;;AAEA,UAAUC,mBAAV,GAAgC;AAC5B;AACA;AACA,QAAM;AAACC,IAAAA,OAAD;AAAUC,IAAAA,IAAV;AAAgBC,IAAAA,OAAhB;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA;AAAnC,MAA+CC,aAArD;AACA,QAAMC,IAAI,GAAG,MAAMZ,IAAI,CAACG,WAAW,CAACG,OAAD,EAAUC,IAAV,EAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,QAAnC,CAAZ,CAAvB;AACA,QAAMT,GAAG,CAACG,aAAa,CAACQ,IAAD,CAAd,CAAT;AACH;;AAED,OAAO,UAAUC,kBAAV,GAA+B;AAClC,QAAMX,SAAS,CAACE,aAAD,EAAgBC,mBAAhB,CAAf;AACH","sourcesContent":["import { call, put, takeEvery } from 'redux-saga/effects';\nimport { getProducts } from '../api/getProducts';\nimport { fetchProducts } from '../features/productsSlice';\n// import { useSelector } from 'react-redux';\n\nfunction* workerFetchProducts() {\n    // const store = useSelector(state => state)\n    // const {productsSlice} = store\n    const {perPage, page, origins, minPrice, maxPrice} = productsSlice\n    const data = yield call(getProducts(perPage, page, origins, minPrice, maxPrice));\n    yield put(fetchProducts(data));\n}\n\nexport function* watchFetchProducts() {\n    yield takeEvery(fetchProducts, workerFetchProducts);\n}\n"]},"metadata":{},"sourceType":"module"}