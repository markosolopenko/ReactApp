{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/pages/DetailPage/ProductsDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport DetailsBody from '../../components/DetailPageComponents/DetailsBody/DetailsBody';\nimport HeaderOfPage from '../../components/Header/HeaderOfPage'; // Redux\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { countGenerallyAddedProducts, addProductsToCartPage, decreaseProductFromCart } from '../../features/productsSlice';\nimport { handleChange } from '../../features/inputSlice';\nimport { useState } from 'react';\n\nconst ProductsDetail = () => {\n  _s();\n\n  const store = useSelector(state => state);\n  const [count, setCount] = useState(0);\n  const dispatch = useDispatch();\n  const {\n    amountAddedProducts,\n    sumOfPricesAddedProducts,\n    product\n  } = store.productsSlice;\n\n  const increment = () => {\n    if (count >= 0) {\n      setCount(count + 1);\n      dispatch(addProductsToCartPage({\n        product: [product]\n      }));\n    }\n  };\n\n  const decrement = () => {\n    if (count >= 1) {\n      setCount(count - 1);\n      dispatch(decreaseProductFromCart());\n    }\n  };\n\n  const handleChanges = event => {\n    dispatch(handleChange({\n      value: event.target.value + count\n    }));\n  };\n\n  const detailsPageAddToCart = () => {\n    const sum = count * product.price;\n    const array = [];\n\n    for (let i = 0; i < count; i++) {\n      array.push(product);\n    }\n\n    dispatch(countGenerallyAddedProducts({\n      value: count,\n      price: sum\n    }));\n    dispatch(addProductsToCartPage({\n      product: array\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"detailsContainer\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderOfPage, {\n      count: amountAddedProducts,\n      sum: sumOfPricesAddedProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DetailsBody, {\n      handleChange: handleChanges,\n      product: product,\n      increment: increment,\n      decrement: decrement,\n      count: store.inputSlice.value,\n      addToCart: detailsPageAddToCart\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductsDetail, \"hfw76lAhbhgTjoXfur5YTKd2bhg=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ProductsDetail;\nexport default ProductsDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsDetail\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/pages/DetailPage/ProductsDetail.js"],"names":["React","DetailsBody","HeaderOfPage","useSelector","useDispatch","countGenerallyAddedProducts","addProductsToCartPage","decreaseProductFromCart","handleChange","useState","ProductsDetail","store","state","count","setCount","dispatch","amountAddedProducts","sumOfPricesAddedProducts","product","productsSlice","increment","decrement","handleChanges","event","value","target","detailsPageAddToCart","sum","price","array","i","push","inputSlice"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,+DAAxB;AACA,OAAOC,YAAP,MAAyB,sCAAzB,C,CACA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAAQC,2BAAR,EACQC,qBADR,EAEQC,uBAFR,QAEyC,8BAFzC;AAGA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAGA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMM,QAAQ,GAAGX,WAAW,EAA5B;AACA,QAAM;AAAEY,IAAAA,mBAAF;AAAuBC,IAAAA,wBAAvB;AAAiDC,IAAAA;AAAjD,MAA6DP,KAAK,CAACQ,aAAzE;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpB,QAAIP,KAAK,IAAI,CAAb,EAAgB;AACbC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAE,MAAAA,QAAQ,CAACT,qBAAqB,CAAC;AAACY,QAAAA,OAAO,EAAE,CAACA,OAAD;AAAV,OAAD,CAAtB,CAAR;AACF;AACJ,GALD;;AAMA,QAAMG,SAAS,GAAG,MAAM;AACpB,QAAIR,KAAK,IAAI,CAAb,EAAgB;AACZC,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAE,MAAAA,QAAQ,CAACR,uBAAuB,EAAxB,CAAR;AACH;AACJ,GALD;;AAMA,QAAMe,aAAa,GAAIC,KAAD,IAAW;AAC7BR,IAAAA,QAAQ,CAACP,YAAY,CAAC;AAACgB,MAAAA,KAAK,EAAED,KAAK,CAACE,MAAN,CAAaD,KAAb,GAAqBX;AAA7B,KAAD,CAAb,CAAR;AACH,GAFD;;AAGA,QAAMa,oBAAoB,GAAG,MAAM;AAC/B,UAAMC,GAAG,GAAGd,KAAK,GAAGK,OAAO,CAACU,KAA5B;AACA,UAAMC,KAAK,GAAG,EAAd;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGjB,KAAnB,EAA0BiB,CAAC,EAA3B,EAA+B;AAC3BD,MAAAA,KAAK,CAACE,IAAN,CAAWb,OAAX;AACH;;AACDH,IAAAA,QAAQ,CAACV,2BAA2B,CAAC;AAACmB,MAAAA,KAAK,EAAEX,KAAR;AAAee,MAAAA,KAAK,EAAED;AAAtB,KAAD,CAA5B,CAAR;AACAZ,IAAAA,QAAQ,CAACT,qBAAqB,CAAC;AAACY,MAAAA,OAAO,EAAEW;AAAV,KAAD,CAAtB,CAAR;AACH,GARD;;AAUA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,YAAD;AACQ,MAAA,KAAK,EAAEb,mBADf;AACoC,MAAA,GAAG,EAAEC;AADzC;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,WAAD;AACQ,MAAA,YAAY,EAAEK,aADtB;AAEQ,MAAA,OAAO,EAAEJ,OAFjB;AAGQ,MAAA,SAAS,EAAEE,SAHnB;AAIQ,MAAA,SAAS,EAAEC,SAJnB;AAKQ,MAAA,KAAK,EAAEV,KAAK,CAACqB,UAAN,CAAiBR,KALhC;AAMQ,MAAA,SAAS,EAAEE;AANnB;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA7CD;;GAAMhB,c;UACYP,W,EAEGC,W;;;KAHfM,c;AA+CN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport DetailsBody from '../../components/DetailPageComponents/DetailsBody/DetailsBody'\nimport HeaderOfPage from '../../components/Header/HeaderOfPage'\n// Redux\nimport { useSelector, useDispatch } from 'react-redux';\nimport {countGenerallyAddedProducts,\n        addProductsToCartPage,\n        decreaseProductFromCart,  } from '../../features/productsSlice';\nimport { handleChange } from '../../features/inputSlice';\nimport { useState } from 'react';\n\n\nconst ProductsDetail = () => {\n    const store = useSelector(state => state)\n    const [count, setCount] = useState(0)\n    const dispatch = useDispatch()\n    const { amountAddedProducts, sumOfPricesAddedProducts, product } = store.productsSlice\n    const increment = () => {\n        if (count >= 0) {\n           setCount(count + 1)\n           dispatch(addProductsToCartPage({product: [product]}))\n        } \n    }\n    const decrement = () => {\n        if (count >= 1) {\n            setCount(count - 1)\n            dispatch(decreaseProductFromCart())\n        }\n    }\n    const handleChanges = (event) => {\n        dispatch(handleChange({value: event.target.value + count}))\n    }\n    const detailsPageAddToCart = () => {\n        const sum = count * product.price;\n        const array = [];\n        for(let i = 0; i < count; i++) {\n            array.push(product)\n        }\n        dispatch(countGenerallyAddedProducts({value: count, price: sum}))\n        dispatch(addProductsToCartPage({product: array}))\n    }\n\n    return (\n        <div className=\"detailsContainer\">\n            <HeaderOfPage \n                    count={amountAddedProducts} sum={sumOfPricesAddedProducts} \n            />\n            <DetailsBody \n                    handleChange={handleChanges}\n                    product={product} \n                    increment={increment} \n                    decrement={decrement}\n                    count={store.inputSlice.value}\n                    addToCart={detailsPageAddToCart}\n            />\n        </div>\n    )\n}\n\nexport default ProductsDetail;"]},"metadata":{},"sourceType":"module"}