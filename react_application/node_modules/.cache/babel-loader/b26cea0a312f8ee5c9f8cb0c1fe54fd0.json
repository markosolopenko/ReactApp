{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\nexport const counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    amountAddedProducts: 0,\n    sumOfPricesAddedProducts: 0\n  },\n  reducers: {\n    addToCart(state, action) {\n      const {\n        price\n      } = action.payload;\n      return { ...state,\n        amountAddedProducts: state.amountAddedProducts + 1,\n        sumOfPricesAddedProducts: state.sumOfPricesAddedProducts + action.payload.payload.price\n      };\n    },\n\n    decrement: state => state - 1,\n    update: state => state = 0\n  }\n});","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/features/counterSlice.js"],"names":["createSlice","act","counterSlice","name","initialState","amountAddedProducts","sumOfPricesAddedProducts","reducers","addToCart","state","action","price","payload","decrement","update"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,GAAT,QAAoB,sBAApB;AAGA,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAAC;AACpCG,EAAAA,IAAI,EAAE,SAD8B;AAEpCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,mBAAmB,EAAE,CADX;AAEVC,IAAAA,wBAAwB,EAAE;AAFhB,GAFsB;AAMpCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAM;AAAEC,QAAAA;AAAF,UAAYD,MAAM,CAACE,OAAzB;AACA,aAAO,EACH,GAAGH,KADA;AAEHJ,QAAAA,mBAAmB,EAAEI,KAAK,CAACJ,mBAAN,GAA4B,CAF9C;AAGHC,QAAAA,wBAAwB,EAAEG,KAAK,CAACH,wBAAN,GAAiCI,MAAM,CAACE,OAAP,CAAeA,OAAf,CAAuBD;AAH/E,OAAP;AAKH,KARK;;AASNE,IAAAA,SAAS,EAAEJ,KAAK,IAAIA,KAAK,GAAG,CATtB;AAUNK,IAAAA,MAAM,EAAEL,KAAK,IAAIA,KAAK,GAAG;AAVnB;AAN0B,CAAD,CAAhC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\n\n\nexport const counterSlice = createSlice({\n    name: 'counter',\n    initialState: {\n        amountAddedProducts: 0,\n        sumOfPricesAddedProducts: 0,\n    }, \n    reducers: {\n        addToCart(state, action) {\n            const { price } = action.payload\n            return {\n                ...state, \n                amountAddedProducts: state.amountAddedProducts + 1,\n                sumOfPricesAddedProducts: state.sumOfPricesAddedProducts + action.payload.payload.price\n            }\n        },\n        decrement: state => state - 1,\n        update: state => state = 0\n    }\n}) "]},"metadata":{},"sourceType":"module"}