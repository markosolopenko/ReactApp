{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/components/OrderedProducts/OrderedProductsBody.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { fetchOrderProductsByNickname } from '../../features/formSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst TableHead = () => {\n  return /*#__PURE__*/_jsxDEV(\"thead\", {\n    className: \"orderedTableHead\",\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: [/*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"tableTitleColumn\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"tableTitleColumn\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"tableTitleColumn\",\n        children: \"Origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"tableTitleColumn\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n        className: \"tableTitleColumn\",\n        children: \"Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = TableHead;\n\nconst TableBody = ({\n  product,\n  date\n}) => {\n  _s();\n\n  const formSlice = useSelector(state => state.formSlice);\n  const nickname = 'Andy';\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchOrderProductsByNickname(nickname));\n  }, [dispatch]);\n  const rows = formSlice.product.ByNickname.orderedProducts.map((product, id) => {\n    return /*#__PURE__*/_jsxDEV(\"tr\", {\n      className: \"orderedTableBodyElement\",\n      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ordersTableRow\",\n        children: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ordersTableRow\",\n        children: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ordersTableRow\",\n        children: product.origin.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ordersTableRow\",\n        children: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n        className: \"ordersTableRow\",\n        children: [product.price, \"$\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"tbody\", {\n    className: \"orderedTableBody\",\n    children: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(TableBody, \"5cFSewKeWmo4/C38EvVcWb9JQak=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c2 = TableBody;\n\nconst OrderedProductsBody = ({\n  product,\n  date\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"orderedProductsBody\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"orderedProductsTableTitle\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        product: product,\n        date: date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_c3 = OrderedProductsBody;\nexport default OrderedProductsBody;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"TableHead\");\n$RefreshReg$(_c2, \"TableBody\");\n$RefreshReg$(_c3, \"OrderedProductsBody\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/components/OrderedProducts/OrderedProductsBody.js"],"names":["React","useEffect","fetchOrderProductsByNickname","useDispatch","useSelector","TableHead","TableBody","product","date","formSlice","state","nickname","dispatch","rows","ByNickname","orderedProducts","map","id","name","origin","toUpperCase","price","OrderedProductsBody"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\nimport { fetchOrderProductsByNickname } from '../../features/formSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst TableHead = () => {\n    return (\n        <thead className=\"orderedTableHead\">\n            <tr>\n                <th className=\"tableTitleColumn\">Date</th>\n                <th className=\"tableTitleColumn\">Name</th>\n                <th className=\"tableTitleColumn\">Origin</th>\n                <th className=\"tableTitleColumn\">Amount</th>\n                <th className=\"tableTitleColumn\">Price</th>\n            </tr>\n       </thead>\n    )\n}\nconst TableBody = ({product, date}) => {\n    const formSlice = useSelector(state => state.formSlice)\n    const nickname = 'Andy'\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(fetchOrderProductsByNickname(nickname))\n    }, [dispatch])\n    const rows = formSlice.product.ByNickname.orderedProducts.map((product, id) => {\n        return (\n            <tr key={id} className=\"orderedTableBodyElement\">\n                <td className=\"ordersTableRow\">{date}</td>\n                <td className=\"ordersTableRow\">{product.name}</td>\n                <td className=\"ordersTableRow\">{product.origin.toUpperCase()}</td>\n                <td className=\"ordersTableRow\">{2}</td>\n                <td className=\"ordersTableRow\">{product.price}$</td>\n            </tr>\n        )\n    })\n    return <tbody className=\"orderedTableBody\">{rows}</tbody>\n}\n\nconst OrderedProductsBody = ({product, date}) => { \n    return (\n        <div className=\"orderedProductsBody\">\n            <table className=\"orderedProductsTableTitle\">\n                <TableHead />    \n                <TableBody product={product} date={date} />\n            </table>\n        </div>\n    )\n}\n\nexport default OrderedProductsBody"]},"metadata":{},"sourceType":"module"}