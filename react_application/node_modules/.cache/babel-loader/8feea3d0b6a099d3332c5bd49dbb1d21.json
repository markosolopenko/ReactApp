{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/context/detailHandler.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport const Context = /*#__PURE__*/React.createContext();\nexport const HandleDetail = props => {\n  _s();\n\n  const [sum, setSum] = useState(0);\n  const [count, setCount] = useState(0);\n  const [products, setProduct] = useState([]);\n  const values = {\n    sum,\n    'setSum': se,\n    count,\n    setCount,\n    products,\n    setProduct\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleDetail, \"EH5fMQFADpbavbpx/6WpfZ6I1Gc=\");\n\n_c = HandleDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleDetail\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/context/detailHandler.js"],"names":["React","useState","Context","createContext","HandleDetail","props","sum","setSum","count","setCount","products","setProduct","values","se","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AAGA,OAAO,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;AAEP,OAAO,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBN,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACS,QAAD,EAAWC,UAAX,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAMW,MAAM,GAAG;AACXN,IAAAA,GADW;AAEX,cAAUO,EAFC;AAGXL,IAAAA,KAHW;AAIXC,IAAAA,QAJW;AAKXC,IAAAA,QALW;AAMXC,IAAAA;AANW,GAAf;AAQA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,MAAzB;AAAA,cACKP,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMV,Y;;KAAAA,Y","sourcesContent":["import React, {useState} from 'react'\n\n\nexport const Context = React.createContext();\n\nexport const HandleDetail = (props) => {\n    const [sum, setSum] = useState(0)\n    const [count, setCount] = useState(0)\n    const [products, setProduct] = useState([])\n    \n    const values = {\n        sum, \n        'setSum': se, \n        count, \n        setCount, \n        products, \n        setProduct\n    }  \n    return (\n        <Context.Provider value={values}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}