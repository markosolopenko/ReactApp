{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const mainPageSlice = createSlice({\n  name: 'handleAddToCartClick',\n  initialState: {\n    amountAddedProducts: 0,\n    sumOfPricesAddedProducts: 0,\n    product: {},\n    cartPageProducts: [],\n    cartPageSetProducts: []\n  },\n  reducers: {\n    summarizeAll(state, action) {\n      const {\n        price,\n        value\n      } = action.payload.payload;\n      return { ...state,\n        amountAddedProducts: state.amountAddedProducts + value,\n        sumOfPricesAddedProducts: state.sumOfPricesAddedProducts + price\n      };\n    },\n\n    setDetailsPageProduct(state, action) {\n      const {\n        product\n      } = action.payload.payload;\n      return { ...state,\n        product: product\n      };\n    },\n\n    addProductsToCartPage(state, action) {\n      const {\n        product\n      } = action.payload.payload;\n      return { ...state,\n        cartPageProducts: [...state.cartPageProducts, product]\n      };\n    },\n\n    addProductsCartPageSet(state, action) {\n      const {\n        product\n      } = action.payload.payload;\n      return { ...state,\n        cartPageSetProducts: [...state.cartPageSetProducts, product]\n      };\n    },\n\n    deleteProductFromCart(state, action) {\n      return { ...state,\n        cartPageProducts: state.cartPageProducts.slice(0, state.cartPageProducts.length - 1)\n      };\n    }\n\n  }\n});","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/features/mainPageSlice.js"],"names":["createSlice","mainPageSlice","name","initialState","amountAddedProducts","sumOfPricesAddedProducts","product","cartPageProducts","cartPageSetProducts","reducers","summarizeAll","state","action","price","value","payload","setDetailsPageProduct","addProductsToCartPage","addProductsCartPageSet","deleteProductFromCart","slice","length"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;AACrCE,EAAAA,IAAI,EAAE,sBAD+B;AAErCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,mBAAmB,EAAE,CADX;AAEVC,IAAAA,wBAAwB,EAAE,CAFhB;AAGVC,IAAAA,OAAO,EAAE,EAHC;AAIVC,IAAAA,gBAAgB,EAAE,EAJR;AAKVC,IAAAA,mBAAmB,EAAE;AALX,GAFuB;AASrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,YAAY,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACxB,YAAM;AAAEC,QAAAA,KAAF;AAASC,QAAAA;AAAT,UAAmBF,MAAM,CAACG,OAAP,CAAeA,OAAxC;AACA,aAAO,EACH,GAAGJ,KADA;AAEHP,QAAAA,mBAAmB,EAAEO,KAAK,CAACP,mBAAN,GAA4BU,KAF9C;AAGHT,QAAAA,wBAAwB,EAAEM,KAAK,CAACN,wBAAN,GAAiCQ;AAHxD,OAAP;AAKH,KARK;;AASNG,IAAAA,qBAAqB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAM;AAAEN,QAAAA;AAAF,UAAcM,MAAM,CAACG,OAAP,CAAeA,OAAnC;AACA,aAAO,EACH,GAAGJ,KADA;AAEHL,QAAAA,OAAO,EAAEA;AAFN,OAAP;AAIH,KAfK;;AAgBNW,IAAAA,qBAAqB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAM;AAAEN,QAAAA;AAAF,UAAcM,MAAM,CAACG,OAAP,CAAeA,OAAnC;AACA,aAAO,EACH,GAAGJ,KADA;AAEHJ,QAAAA,gBAAgB,EAAE,CAAC,GAAGI,KAAK,CAACJ,gBAAV,EAA4BD,OAA5B;AAFf,OAAP;AAIH,KAtBK;;AAuBNY,IAAAA,sBAAsB,CAACP,KAAD,EAAQC,MAAR,EAAgB;AAClC,YAAM;AAAEN,QAAAA;AAAF,UAAcM,MAAM,CAACG,OAAP,CAAeA,OAAnC;AACA,aAAO,EACH,GAAGJ,KADA;AAEHH,QAAAA,mBAAmB,EAAE,CAAC,GAAGG,KAAK,CAACH,mBAAV,EAA+BF,OAA/B;AAFlB,OAAP;AAIH,KA7BK;;AA8BNa,IAAAA,qBAAqB,CAACR,KAAD,EAAQC,MAAR,EAAgB;AACjC,aAAO,EACH,GAAGD,KADA;AAEHJ,QAAAA,gBAAgB,EAAEI,KAAK,CAACJ,gBAAN,CAAuBa,KAAvB,CAA6B,CAA7B,EAAgCT,KAAK,CAACJ,gBAAN,CAAuBc,MAAvB,GAAgC,CAAhE;AAFf,OAAP;AAIH;;AAnCK;AAT2B,CAAD,CAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const mainPageSlice = createSlice({\n    name: 'handleAddToCartClick',\n    initialState: {\n        amountAddedProducts: 0,\n        sumOfPricesAddedProducts: 0,\n        product: {}, \n        cartPageProducts: [],\n        cartPageSetProducts: [],\n    }, \n    reducers: {\n        summarizeAll(state, action) {\n            const { price, value } = action.payload.payload\n            return {\n                ...state, \n                amountAddedProducts: state.amountAddedProducts + value,\n                sumOfPricesAddedProducts: state.sumOfPricesAddedProducts + price,\n            }\n        },\n        setDetailsPageProduct(state, action) {\n            const { product } = action.payload.payload\n            return {\n                ...state,\n                product: product\n            }\n        },\n        addProductsToCartPage(state, action) {\n            const { product } = action.payload.payload\n            return {\n                ...state,\n                cartPageProducts: [...state.cartPageProducts, product],\n            }\n        },\n        addProductsCartPageSet(state, action) {\n            const { product } = action.payload.payload\n            return {\n                ...state,\n                cartPageSetProducts: [...state.cartPageSetProducts, product]\n            }\n        },\n        deleteProductFromCart(state, action) {\n            return {\n                ...state,\n                cartPageProducts: state.cartPageProducts.slice(0, state.cartPageProducts.length - 1)\n            }\n        }\n    }\n}) "]},"metadata":{},"sourceType":"module"}