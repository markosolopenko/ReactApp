{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const productsSlice = createSlice({\n  name: 'productsSlice',\n  initialState: {\n    amountAddedProducts: 0,\n    sumOfPricesAddedProducts: 0,\n    product: {},\n    cartPageProducts: [],\n    cartPageSetProducts: []\n  },\n  reducers: {\n    countGenerallyAddedProducts(state, action) {\n      state.amountAddedProducts += action.payload.value;\n      state.sumOfPricesAddedProducts += action.payload.price;\n    },\n\n    setProductToDetailsPage(state, action) {\n      state.product = action.payload.product;\n    },\n\n    addProductsToCartPage(state, action) {\n      state.cartPageProducts = [...state.cartPageProducts, ...action.payload.array];\n    },\n\n    addProductsToCartPageSet(state, action) {\n      state.cartPageSetProducts = [...state.cartPageSetProducts, action.payload.product];\n    },\n\n    decreaseProductFromCart(state) {\n      state.cartPageProducts = state.cartPageProducts.slice(0, state.cartPageProducts.length - 1);\n    },\n\n    deleteProductFromCart(state, action) {\n      const {\n        id,\n        count,\n        value\n      } = action.payload;\n      state.cartPageSetProducts = state.cartPageSetProducts.filter(product => product.id != id);\n      state.amountAddedProducts -= count;\n      state.sumOfPricesAddedProducts -= value;\n    }\n\n  }\n});\nexport const {\n  countGenerallyAddedProducts,\n  setProductToDetailsPage,\n  addProductsToCartPage,\n  addProductsToCartPageSet,\n  decreaseProductFromCart,\n  deleteProductFromCart\n} = productsSlice.actions;","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/features/productsSlice.js"],"names":["createSlice","productsSlice","name","initialState","amountAddedProducts","sumOfPricesAddedProducts","product","cartPageProducts","cartPageSetProducts","reducers","countGenerallyAddedProducts","state","action","payload","value","price","setProductToDetailsPage","addProductsToCartPage","array","addProductsToCartPageSet","decreaseProductFromCart","slice","length","deleteProductFromCart","id","count","filter","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,aAAa,GAAGD,WAAW,CAAC;AACrCE,EAAAA,IAAI,EAAE,eAD+B;AAErCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,mBAAmB,EAAE,CADX;AAEVC,IAAAA,wBAAwB,EAAE,CAFhB;AAGVC,IAAAA,OAAO,EAAE,EAHC;AAIVC,IAAAA,gBAAgB,EAAE,EAJR;AAKVC,IAAAA,mBAAmB,EAAE;AALX,GAFuB;AASrCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,2BAA2B,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvCD,MAAAA,KAAK,CAACP,mBAAN,IAA6BQ,MAAM,CAACC,OAAP,CAAeC,KAA5C;AACAH,MAAAA,KAAK,CAACN,wBAAN,IAAkCO,MAAM,CAACC,OAAP,CAAeE,KAAjD;AACH,KAJK;;AAKNC,IAAAA,uBAAuB,CAACL,KAAD,EAAQC,MAAR,EAAgB;AACnCD,MAAAA,KAAK,CAACL,OAAN,GAAgBM,MAAM,CAACC,OAAP,CAAeP,OAA/B;AACH,KAPK;;AAQNW,IAAAA,qBAAqB,CAACN,KAAD,EAAQC,MAAR,EAAgB;AACjCD,MAAAA,KAAK,CAACJ,gBAAN,GAAyB,CAAC,GAAGI,KAAK,CAACJ,gBAAV,EAA4B,GAAGK,MAAM,CAACC,OAAP,CAAeK,KAA9C,CAAzB;AACH,KAVK;;AAWNC,IAAAA,wBAAwB,CAACR,KAAD,EAAQC,MAAR,EAAgB;AACpCD,MAAAA,KAAK,CAACH,mBAAN,GAA6B,CAAC,GAAGG,KAAK,CAACH,mBAAV,EAA+BI,MAAM,CAACC,OAAP,CAAeP,OAA9C,CAA7B;AACH,KAbK;;AAcNc,IAAAA,uBAAuB,CAACT,KAAD,EAAQ;AAC3BA,MAAAA,KAAK,CAACJ,gBAAN,GAAyBI,KAAK,CAACJ,gBAAN,CAAuBc,KAAvB,CAA6B,CAA7B,EAAgCV,KAAK,CAACJ,gBAAN,CAAuBe,MAAvB,GAAgC,CAAhE,CAAzB;AACH,KAhBK;;AAiBNC,IAAAA,qBAAqB,CAACZ,KAAD,EAAQC,MAAR,EAAgB;AACjC,YAAM;AAAEY,QAAAA,EAAF;AAAMC,QAAAA,KAAN;AAAaX,QAAAA;AAAb,UAAuBF,MAAM,CAACC,OAApC;AACAF,MAAAA,KAAK,CAACH,mBAAN,GAA4BG,KAAK,CAACH,mBAAN,CAA0BkB,MAA1B,CAAiCpB,OAAO,IAAIA,OAAO,CAACkB,EAAR,IAAcA,EAA1D,CAA5B;AACAb,MAAAA,KAAK,CAACP,mBAAN,IAA6BqB,KAA7B;AACAd,MAAAA,KAAK,CAACN,wBAAN,IAAkCS,KAAlC;AACH;;AAtBK;AAT2B,CAAD,CAAjC;AAmCP,OAAO,MAAM;AACTJ,EAAAA,2BADS;AAETM,EAAAA,uBAFS;AAGTC,EAAAA,qBAHS;AAITE,EAAAA,wBAJS;AAKTC,EAAAA,uBALS;AAMTG,EAAAA;AANS,IAOGtB,aAAa,CAAC0B,OAPvB","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const productsSlice = createSlice({\n    name: 'productsSlice',\n    initialState: {\n        amountAddedProducts: 0,\n        sumOfPricesAddedProducts: 0,\n        product: {}, \n        cartPageProducts: [],\n        cartPageSetProducts: [],\n    }, \n    reducers: {\n        countGenerallyAddedProducts(state, action) {\n            state.amountAddedProducts += action.payload.value\n            state.sumOfPricesAddedProducts += action.payload.price\n        },\n        setProductToDetailsPage(state, action) {\n            state.product = action.payload.product\n        },\n        addProductsToCartPage(state, action) {\n            state.cartPageProducts = [...state.cartPageProducts, ...action.payload.array]\n        },\n        addProductsToCartPageSet(state, action) {\n            state.cartPageSetProducts =  [...state.cartPageSetProducts, action.payload.product]\n        },\n        decreaseProductFromCart(state) {\n            state.cartPageProducts = state.cartPageProducts.slice(0, state.cartPageProducts.length - 1)\n        },\n        deleteProductFromCart(state, action) {\n            const { id, count, value } = action.payload\n            state.cartPageSetProducts = state.cartPageSetProducts.filter(product => product.id != id)\n            state.amountAddedProducts -= count\n            state.sumOfPricesAddedProducts -= value\n        }\n    }\n}) \n\nexport const {\n    countGenerallyAddedProducts,\n    setProductToDetailsPage,\n    addProductsToCartPage,\n    addProductsToCartPageSet,\n    decreaseProductFromCart,\n    deleteProductFromCart  \n            } = productsSlice.actions"]},"metadata":{},"sourceType":"module"}