{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/pages/MainPage/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Products from '../../components/Products/ProductBody';\nimport HeaderOfPage from '../../components/Header/HeaderOfPage';\nimport { countGenerallyAddedProducts, setProductToDetailsPage } from '../../features/productsSlice'; // redux \n\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst MainPage = () => {\n  _s();\n\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    amountAddedProducts,\n    sumOfPricesAddedProducts\n  } = store.mainPageSlice;\n\n  const addProductToDetailsPage = product => {\n    dispatch(mainPageSlice.actions.setDetailsPageProduct({\n      product: product\n    }));\n    dispatch(mainPageSlice.actions.addProductsCartPageSet({\n      product: product\n    }));\n  };\n\n  const addToCart = (price, product) => {\n    const array = [product];\n    dispatch(countGenerallyAddedProducts({\n      value: 1,\n      price: price\n    }));\n    dispatch(mainPageSlice.actions.addProductsToCartPage({\n      payload: {\n        array: array\n      }\n    }));\n\n    if (!store.mainPageSlice.cartPageSetProducts.includes(product)) {\n      dispatch(mainPageSlice.actions.addProductsCartPageSet({\n        payload: {\n          product: product\n        }\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderOfPage, {\n      count: amountAddedProducts,\n      sum: sumOfPricesAddedProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      addToCart: addToCart,\n      addProductToDetails: addProductToDetailsPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 8\n  }, this);\n};\n\n_s(MainPage, \"TJyi8xTV/cllwIsFm0O4nJ8aGD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/pages/MainPage/MainPage.js"],"names":["React","Products","HeaderOfPage","countGenerallyAddedProducts","setProductToDetailsPage","useSelector","useDispatch","MainPage","store","state","dispatch","amountAddedProducts","sumOfPricesAddedProducts","mainPageSlice","addProductToDetailsPage","product","actions","setDetailsPageProduct","addProductsCartPageSet","addToCart","price","array","value","addProductsToCartPage","payload","cartPageSetProducts","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAASC,2BAAT,EACQC,uBADR,QACwC,8BADxC,C,CAGA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AAAEK,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAmDJ,KAAK,CAACK,aAA/D;;AAEA,QAAMC,uBAAuB,GAAIC,OAAD,IAAa;AACzCL,IAAAA,QAAQ,CAACG,aAAa,CAACG,OAAd,CAAsBC,qBAAtB,CAA4C;AAACF,MAAAA,OAAO,EAAEA;AAAV,KAA5C,CAAD,CAAR;AACAL,IAAAA,QAAQ,CAACG,aAAa,CAACG,OAAd,CAAsBE,sBAAtB,CAA6C;AAACH,MAAAA,OAAO,EAAEA;AAAV,KAA7C,CAAD,CAAR;AACH,GAHD;;AAIA,QAAMI,SAAS,GAAG,CAACC,KAAD,EAAQL,OAAR,KAAoB;AAClC,UAAMM,KAAK,GAAG,CAACN,OAAD,CAAd;AACAL,IAAAA,QAAQ,CAACP,2BAA2B,CAAC;AAACmB,MAAAA,KAAK,EAAE,CAAR;AAAWF,MAAAA,KAAK,EAAEA;AAAlB,KAAD,CAA5B,CAAR;AACAV,IAAAA,QAAQ,CAACG,aAAa,CAACG,OAAd,CAAsBO,qBAAtB,CAA4C;AAAEC,MAAAA,OAAO,EAAE;AAACH,QAAAA,KAAK,EAAEA;AAAR;AAAX,KAA5C,CAAD,CAAR;;AACA,QAAI,CAACb,KAAK,CAACK,aAAN,CAAoBY,mBAApB,CAAwCC,QAAxC,CAAiDX,OAAjD,CAAL,EAAgE;AAC5DL,MAAAA,QAAQ,CAACG,aAAa,CAACG,OAAd,CAAsBE,sBAAtB,CAA6C;AAACM,QAAAA,OAAO,EAAE;AAACT,UAAAA,OAAO,EAAEA;AAAV;AAAV,OAA7C,CAAD,CAAR;AACH;AACJ,GAPD;;AAQA,sBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACK,QAAC,YAAD;AACI,MAAA,KAAK,EAAEJ,mBADX;AAEI,MAAA,GAAG,EAAEC;AAFT;AAAA;AAAA;AAAA;AAAA,YADL,eAKK,QAAC,QAAD;AACI,MAAA,SAAS,EAAEO,SADf;AAEI,MAAA,mBAAmB,EAAEL;AAFzB;AAAA;AAAA;AAAA;AAAA,YALL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAYH,CA9BD;;GAAMP,Q;UACYF,W,EACGC,W;;;KAFfC,Q;AAgCN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport Products from '../../components/Products/ProductBody'\nimport HeaderOfPage from '../../components/Header/HeaderOfPage'\nimport { countGenerallyAddedProducts,\n        setProductToDetailsPage, } from '../../features/productsSlice';\n\n// redux \nimport { useSelector, useDispatch } from 'react-redux';\n\nconst MainPage = () => {\n    const store = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    const { amountAddedProducts, sumOfPricesAddedProducts} = store.mainPageSlice\n\n    const addProductToDetailsPage = (product) => {\n        dispatch(mainPageSlice.actions.setDetailsPageProduct({product: product}))\n        dispatch(mainPageSlice.actions.addProductsCartPageSet({product: product}))\n    }\n    const addToCart = (price, product) => {\n        const array = [product]\n        dispatch(countGenerallyAddedProducts({value: 1, price: price}))\n        dispatch(mainPageSlice.actions.addProductsToCartPage({ payload: {array: array} }))\n        if (!store.mainPageSlice.cartPageSetProducts.includes(product)) {\n            dispatch(mainPageSlice.actions.addProductsCartPageSet({payload: {product: product}}))\n        }\n    }\n    return (\n       <div className=\"container\">\n            <HeaderOfPage \n                count={amountAddedProducts} \n                sum={sumOfPricesAddedProducts} \n            />\n            <Products \n                addToCart={addToCart} \n                addProductToDetails={addProductToDetailsPage} \n            />\n        </div>\n    )\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}