{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/components/Forms/formForAddOrEditProduct/Form.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\nimport { useSelector } from 'react-redux';\n\nconst MyTextInput = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      className: \"label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputField\",\n      defaultValue: props.defaultValue,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMassege\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MyTextInput, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = MyTextInput;\n\nconst MySelect = ({\n  label,\n  ...props\n}) => {\n  _s2();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id || props.name,\n      className: \"label\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      defaultValue: props.defaultValue,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), meta.touched && meta.error ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"errorMessage\",\n      children: meta.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(MySelect, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c2 = MySelect;\n\nconst FormForAddAndEditProduct = ({\n  handleSubmit,\n  form\n}) => {\n  _s3();\n\n  const store = useSelector(state => state.formSlice);\n  const initState = store.productById;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initState,\n      validationSchema: Yup.object({\n        name: Yup.string().min(3, 'Required Min 3 symbols!!!').max(20, 'Max available 20 symbols!!!').required('Required!!!'),\n        price: Yup.number().typeError('Type error. Must be a number!!!').min(0, 'Negaive numbers doesn\\'t allowed!!!').required('Reqiured!!!'),\n        origin: Yup.string().oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\").required('Required!!!')\n      }),\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n        handleSubmit(values);\n        setSubmitting(false);\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      },\n      children: ({\n        isSubmitting,\n        dirty,\n        resetForm,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"addProductForm\",\n        children: [/*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"name\",\n          name: \"name\",\n          type: \"text\",\n          autoComplete: \"off\",\n          placeholder: \"Product Name\",\n          defaultValue: store.productById.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MyTextInput, {\n          label: \"price\",\n          name: \"price\",\n          type: \"text\",\n          className: \"inputField\",\n          autoComplete: \"off\",\n          placeholder: \"Product Price\",\n          defaultValue: store.productById.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n          label: \"origin\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            className: \"optionOrigin\",\n            children: \"Select origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ASIA\",\n            className: \"optionOrigin\",\n            children: \"ASIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"USA\",\n            className: \"optionOrigin\",\n            children: \"USA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EUROPE\",\n            className: \"optionOrigin\",\n            children: \"EUROPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AFRICA\",\n            className: \"optionOrigin\",\n            children: \"AFRICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitForm\",\n          disabled: isSubmitting || !dirty,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"resetFormButton\",\n          onClick: () => {\n            resetForm({\n              values: initState\n            });\n          },\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancelChangesButton\",\n          onClick: () => {\n            form.current.style.display = '';\n            resetForm({\n              values: initState\n            });\n          },\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this);\n};\n\n_s3(FormForAddAndEditProduct, \"5ilW2KbvJgah+YZGWDN+yWKc71U=\", false, function () {\n  return [useSelector];\n});\n\n_c3 = FormForAddAndEditProduct;\nexport default FormForAddAndEditProduct;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MyTextInput\");\n$RefreshReg$(_c2, \"MySelect\");\n$RefreshReg$(_c3, \"FormForAddAndEditProduct\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/components/Forms/formForAddOrEditProduct/Form.js"],"names":["React","Formik","Form","useField","Yup","useSelector","MyTextInput","label","props","field","meta","id","name","defaultValue","touched","error","MySelect","FormForAddAndEditProduct","handleSubmit","form","store","state","formSlice","initState","productById","object","string","min","max","required","price","number","typeError","origin","oneOf","values","setSubmitting","resetForm","setTimeout","window","location","reload","isSubmitting","dirty","current","style","display"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Formik, Form, useField } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\nimport { useSelector } from 'react-redux';\n\n\nconst MyTextInput = ({label, ...props}) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n      <label htmlFor={props.id || props.name} className=\"label\"></label>\n      <input className=\"inputField\"  \n             defaultValue={props.defaultValue} {...props} \n      />\n      {meta.touched && meta.error ? (\n        <div className=\"errorMassege\">{meta.error}</div>\n      ): null}\n    </div>\n  )\n}\nconst MySelect = ({label, ...props}) => {\n  const [field, meta] = useField(props);\n  return (\n    <div>\n        <label htmlFor={props.id || props.name} className=\"label\"></label>\n        <select defaultValue={props.defaultValue} {...props} />\n        {meta.touched && meta.error ? (\n          <div className=\"errorMessage\">{meta.error}</div>\n        ): null}\n    </div>\n  )\n}\n\nconst FormForAddAndEditProduct = ({handleSubmit, form}) => {\n    const store = useSelector(state => state.formSlice)\n    const initState = store.productById\n    return (\n      <div className=\"form\">\n        <Formik \n          initialValues={initState}\n          validationSchema={Yup.object({\n            name: Yup.string()\n            .min(3, 'Required Min 3 symbols!!!')\n            .max(20, 'Max available 20 symbols!!!')\n            .required('Required!!!'),\n            price: Yup.number()\n              .typeError('Type error. Must be a number!!!')\n              .min(0, 'Negaive numbers doesn\\'t allowed!!!')\n              .required('Reqiured!!!'),\n            origin: Yup.string()\n              .oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\")\n              .required('Required!!!')\n          })}\n          onSubmit={(values, {setSubmitting, resetForm} )=> {\n              setSubmitting(true)\n              handleSubmit(values)\n              setSubmitting(false)\n              setTimeout(() => {\n                window.location.reload()\n              }, 1000)\n          }}\n        >\n        {({ isSubmitting, dirty, resetForm, values }) => (\n          <Form className=\"addProductForm\">\n            <MyTextInput \n                label=\"name\"\n                name=\"name\" \n                type=\"text\" \n                autoComplete=\"off\"\n                placeholder=\"Product Name\" \n                defaultValue={store.productById.name}\n            />\n            <MyTextInput\n                label=\"price\"\n                name=\"price\" \n                type=\"text\" \n                className=\"inputField\" \n                autoComplete=\"off\"\n                placeholder=\"Product Price\" \n                defaultValue={store.productById.price}\n            />\n           <MySelect label=\"origin\">\n              <option value=\"\" className=\"optionOrigin\">Select origin</option>\n              <option value=\"ASIA\" className=\"optionOrigin\">ASIA</option>\n              <option value=\"USA\" className=\"optionOrigin\">USA</option>\n              <option value=\"EUROPE\" className=\"optionOrigin\">EUROPE</option>\n              <option value=\"AFRICA\" className=\"optionOrigin\">AFRICA</option>\n            </MySelect>\n            <button \n              type=\"submit\" \n              className=\"submitForm\"\n              disabled={isSubmitting || !dirty}\n            >\n              Submit\n            </button>\n            <button \n                type=\"reset\" \n                className=\"resetFormButton\"\n                onClick={() => {\n                  resetForm({values: initState})\n                }}\n            >\n                RESET\n            </button>\n            <button \n                type=\"button\" \n                className=\"cancelChangesButton\"\n                onClick={() => {\n                  form.current.style.display = ''\n                  resetForm({values: initState})\n                }}\n            >\n                CANCEL\n            </button>\n          </Form>\n        )}\n        </Formik>\n      </div>\n    )\n}\n\nexport default FormForAddAndEditProduct"]},"metadata":{},"sourceType":"module"}