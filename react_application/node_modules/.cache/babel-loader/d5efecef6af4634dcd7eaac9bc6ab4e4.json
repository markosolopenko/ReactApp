{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nexport const Context = /*#__PURE__*/React.createContext();\nexport const ACTIONS = {\n  ADD_TO_CART: 'add-to-cart'\n};\nexport const reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_TO_CART:\n      return state.count + 1, state.sum + addToCart(value);\n  }\n};\n\nconst addToCard = () => {\n  dispatch({\n    type: ACTIONS.ADD_TO_CART\n  });\n};\n\nexport const HandleDetail = props => {\n  _s();\n\n  const [state, dispatch] = useReducer(reducer, {\n    sum: 0,\n    count: 0\n  });\n  const [sum, setSum] = useState(0);\n  const [count, setCount] = useState(0);\n  const [detailsCount, setDetailsCount] = useState(0);\n  const [product, setProduct] = useState({});\n  const [sumOfAdded, setSumOfAdded] = useState(0);\n  const [cart, setCart] = useState([]);\n  const values = {\n    sum,\n    setSum,\n    count,\n    setCount,\n    sumOfAdded,\n    setSumOfAdded,\n    product,\n    setProduct,\n    detailsCount,\n    setDetailsCount,\n    cart,\n    setCart\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleDetail, \"6LwJU775NZg/hphykCvn+A1o48c=\");\n\n_c = HandleDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleDetail\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/context/Context.js"],"names":["React","useState","useReducer","Context","createContext","ACTIONS","ADD_TO_CART","reducer","state","action","type","count","sum","addToCart","value","addToCard","dispatch","HandleDetail","props","setSum","setCount","detailsCount","setDetailsCount","product","setProduct","sumOfAdded","setSumOfAdded","cart","setCart","values","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAGA,OAAO,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,WAAW,EAAE;AADM,CAAhB;AAKP,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,OAAO,CAACC,WAAb;AACI,aACIE,KAAK,CAACG,KAAN,GAAc,CAAd,EACAH,KAAK,CAACI,GAAN,GAAYC,SAAS,CAACC,KAAD,CAFzB;AAFR;AAOH,CARM;;AASP,MAAMC,SAAS,GAAG,MAAM;AACpBC,EAAAA,QAAQ,CAAC;AAAEN,IAAAA,IAAI,EAAEL,OAAO,CAACC;AAAhB,GAAD,CAAR;AACH,CAFD;;AAIA,OAAO,MAAMW,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAM,CAACV,KAAD,EAAQQ,QAAR,IAAoBd,UAAU,CAACK,OAAD,EAAU;AAAEK,IAAAA,GAAG,EAAE,CAAP;AAAUD,IAAAA,KAAK,EAAE;AAAjB,GAAV,CAApC;AACA,QAAM,CAACC,GAAD,EAAMO,MAAN,IAAgBlB,QAAQ,CAAC,CAAD,CAA9B;AACA,QAAM,CAACU,KAAD,EAAQS,QAAR,IAAoBnB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACoB,YAAD,EAAeC,eAAf,IAAkCrB,QAAQ,CAAC,CAAD,CAAhD;AACA,QAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACwB,UAAD,EAAaC,aAAb,IAA8BzB,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM4B,MAAM,GAAG;AACXjB,IAAAA,GADW;AACNO,IAAAA,MADM;AACER,IAAAA,KADF;AACSS,IAAAA,QADT;AACmBK,IAAAA,UADnB;AAC+BC,IAAAA,aAD/B;AAEXH,IAAAA,OAFW;AAEFC,IAAAA,UAFE;AAEUH,IAAAA,YAFV;AAEwBC,IAAAA,eAFxB;AAGXK,IAAAA,IAHW;AAGLC,IAAAA;AAHK,GAAf;AAKA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,MAAzB;AAAA,cACKX,KAAK,CAACY;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMb,Y;;KAAAA,Y","sourcesContent":["import React, {useState, useReducer} from 'react'\n\n\nexport const Context = React.createContext();\n\nexport const ACTIONS = {\n    ADD_TO_CART: 'add-to-cart',\n    \n}\n\nexport const reducer = (state, action) => {\n    switch(action.type) {\n        case ACTIONS.ADD_TO_CART: \n            return (\n                state.count + 1,\n                state.sum + addToCart(value)\n            )\n    }\n}\nconst addToCard = () => {\n    dispatch({ type: ACTIONS.ADD_TO_CART })\n}\n\nexport const HandleDetail = (props) => {\n    const [state, dispatch] = useReducer(reducer, { sum: 0, count: 0 }) \n    const [sum, setSum] = useState(0)\n    const [count, setCount] = useState(0)\n    const [detailsCount, setDetailsCount] = useState(0)\n    const [product, setProduct] = useState({})\n    const [sumOfAdded, setSumOfAdded] = useState(0);\n    const [cart, setCart] = useState([])\n    const values = {\n        sum, setSum, count, setCount, sumOfAdded, setSumOfAdded,\n        product, setProduct, detailsCount, setDetailsCount,\n        cart, setCart\n    }\n    return (\n        <Context.Provider value={values}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}