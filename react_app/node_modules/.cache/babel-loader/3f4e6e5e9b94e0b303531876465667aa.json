{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/pages/MainPage/MainPage.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport Products from '../../components/Products/ProductBody';\nimport HeaderOfPage from '../../components/Header/HeaderOfPage';\nimport { countGenerallyAddedProducts, setProductToDetailsPage, addProductsToCartPage, addProductsToCartPageSet } from '../../features/productsSlice';\nimport Filters from \"../../components/Filters/filters\"; // redux \n\nimport { useSelector, useDispatch } from 'react-redux';\n\nconst MainPage = () => {\n  _s();\n\n  const store = useSelector(state => state);\n  const dispatch = useDispatch();\n  const {\n    amountAddedProducts,\n    sumOfPricesAddedProducts\n  } = store.productsSlice;\n\n  const addProductToDetailsPage = product => {\n    dispatch(setProductToDetailsPage({\n      product: product\n    }));\n  };\n\n  const addToCart = (price, product) => {\n    dispatch(countGenerallyAddedProducts({\n      count: 1,\n      price: price\n    }));\n    dispatch(addProductsToCartPage({\n      array: [product]\n    }));\n\n    if (!store.productsSlice.cartPageSetProducts.includes(product)) {\n      dispatch(addProductsToCartPageSet({\n        product: product\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(HeaderOfPage, {\n      count: amountAddedProducts,\n      sum: sumOfPricesAddedProducts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Filters, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Products, {\n      addToCart: addToCart,\n      addProductToDetails: addProductToDetailsPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 8\n  }, this);\n};\n\n_s(MainPage, \"TJyi8xTV/cllwIsFm0O4nJ8aGD4=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MainPage;\nexport default MainPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainPage\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/pages/MainPage/MainPage.js"],"names":["React","Products","HeaderOfPage","countGenerallyAddedProducts","setProductToDetailsPage","addProductsToCartPage","addProductsToCartPageSet","Filters","useSelector","useDispatch","MainPage","store","state","dispatch","amountAddedProducts","sumOfPricesAddedProducts","productsSlice","addProductToDetailsPage","product","addToCart","price","count","array","cartPageSetProducts","includes"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,uCAArB;AACA,OAAOC,YAAP,MAAyB,sCAAzB;AACA,SAAQC,2BAAR,EACQC,uBADR,EAEQC,qBAFR,EAGQC,wBAHR,QAIO,8BAJP;AAMA,OAAOC,OAAP,MAAoB,kCAApB,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,KAAK,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAV,CAAzB;AACA,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AAEA,QAAM;AAAEK,IAAAA,mBAAF;AAAuBC,IAAAA;AAAvB,MAAoDJ,KAAK,CAACK,aAAhE;;AAEA,QAAMC,uBAAuB,GAAIC,OAAD,IAAa;AACzCL,IAAAA,QAAQ,CAACT,uBAAuB,CAAC;AAACc,MAAAA,OAAO,EAAEA;AAAV,KAAD,CAAxB,CAAR;AACH,GAFD;;AAGA,QAAMC,SAAS,GAAG,CAACC,KAAD,EAAQF,OAAR,KAAoB;AAClCL,IAAAA,QAAQ,CAACV,2BAA2B,CAAC;AAACkB,MAAAA,KAAK,EAAE,CAAR;AAAWD,MAAAA,KAAK,EAAEA;AAAlB,KAAD,CAA5B,CAAR;AACAP,IAAAA,QAAQ,CAACR,qBAAqB,CAAC;AAACiB,MAAAA,KAAK,EAAE,CAACJ,OAAD;AAAR,KAAD,CAAtB,CAAR;;AACA,QAAI,CAACP,KAAK,CAACK,aAAN,CAAoBO,mBAApB,CAAwCC,QAAxC,CAAiDN,OAAjD,CAAL,EAAgE;AAC5DL,MAAAA,QAAQ,CAACP,wBAAwB,CAAC;AAACY,QAAAA,OAAO,EAAEA;AAAV,OAAD,CAAzB,CAAR;AACH;AACJ,GAND;;AAOA,sBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACK,QAAC,YAAD;AACI,MAAA,KAAK,EAAEJ,mBADX;AAEI,MAAA,GAAG,EAAEC;AAFT;AAAA;AAAA;AAAA;AAAA,YADL,eAKK,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YALL,eAMK,QAAC,QAAD;AACI,MAAA,SAAS,EAAEI,SADf;AAEI,MAAA,mBAAmB,EAAEF;AAFzB;AAAA;AAAA;AAAA;AAAA,YANL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAaH,CA7BD;;GAAMP,Q;UACYF,W,EACGC,W;;;KAFfC,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React from 'react';\nimport Products from '../../components/Products/ProductBody'\nimport HeaderOfPage from '../../components/Header/HeaderOfPage'\nimport {countGenerallyAddedProducts,\n        setProductToDetailsPage,\n        addProductsToCartPage,\n        addProductsToCartPageSet, \n} from '../../features/productsSlice';\n\nimport Filters from \"../../components/Filters/filters\";\n\n// redux \nimport { useSelector, useDispatch } from 'react-redux';\n\nconst MainPage = () => {\n    const store = useSelector(state => state)\n    const dispatch = useDispatch()\n\n    const { amountAddedProducts, sumOfPricesAddedProducts } = store.productsSlice\n\n    const addProductToDetailsPage = (product) => {\n        dispatch(setProductToDetailsPage({product: product}))\n    }\n    const addToCart = (price, product) => {\n        dispatch(countGenerallyAddedProducts({count: 1, price: price}))\n        dispatch(addProductsToCartPage({array: [product]} ))\n        if (!store.productsSlice.cartPageSetProducts.includes(product)) {\n            dispatch(addProductsToCartPageSet({product: product}))\n        }\n    }\n    return (\n       <div className=\"container\">\n            <HeaderOfPage \n                count={amountAddedProducts} \n                sum={sumOfPricesAddedProducts} \n            />\n            <Filters />\n            <Products \n                addToCart={addToCart} \n                addProductToDetails={addProductToDetailsPage} \n            />\n        </div>\n    )\n}\n\nexport default MainPage;\n"]},"metadata":{},"sourceType":"module"}