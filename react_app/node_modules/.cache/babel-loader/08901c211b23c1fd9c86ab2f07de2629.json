{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/components/CartPageComponents/CartBodyElement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // Redux \n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { subtractProductFromCart, countGenerallyAddedProducts, subtractFromAddedProducts, addProductsToCartPage, takesDataFromInput } from '../../features/productsSlice'; // icons imports \n\nimport { ReactComponent as Plus } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/plus.svg\";\nimport { ReactComponent as Minus } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/minus.svg\";\nimport { ReactComponent as Trash } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/trash.svg\";\n\nconst CartBodyElement = props => {\n  _s();\n\n  // Props\n  const {\n    product,\n    deleteProduct\n  } = props; // Redux\n\n  const dispatch = useDispatch();\n  const store = useSelector(state => state.productsSlice);\n  let count = 0; // Count how many current product have been added  \n\n  store.cartPageProducts.forEach(productObj => {\n    if (productObj === product) {\n      count += 1;\n    }\n  });\n  const [counter, setCounter] = useState(count); // methods for adding and subtract the elements and also count them\n\n  const increase = () => {\n    if (counter >= 0) {\n      setCounter(counter + 1);\n      dispatch(countGenerallyAddedProducts({\n        count: 1,\n        price: product.price\n      }));\n      dispatch(addProductsToCartPage({\n        array: [product]\n      }));\n    }\n  };\n\n  const decrease = () => {\n    if (counter >= 1) {\n      setCounter(counter - 1);\n      dispatch(subtractProductFromCart({\n        index: cartPageProducts.indexOf(product)\n      }));\n      dispatch(subtractFromAddedProducts({\n        count: 1,\n        price: product.price\n      }));\n    }\n  };\n\n  const addDataWhileChanging = value => {\n    if (value >= 0) {\n      // const array = [];\n      // for (let i = 0; i < value; i++) {\n      //     array.push(product)\n      // }\n      setCounter(value);\n      dispatch(takesDataFromInput({\n        count: value,\n        price: value * product.price\n      }));\n      dispatch(subtractFromAddedProducts({\n        count: counter,\n        price: product.price * counter\n      }));\n    }\n  };\n\n  const handleChange = e => {\n    addDataWhileChanging(Number(e.target.value));\n  };\n\n  console.log(counter);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"elementCartBody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cbName\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cpName\",\n        children: \"NAME\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 37\n      }, this), \": \", product.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"plus__minus\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"minusOne\",\n        onClick: decrease,\n        children: /*#__PURE__*/_jsxDEV(Minus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resultDiv\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"result\",\n          type: \"text\",\n          value: counter,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plusOne\",\n        onClick: increase,\n        children: /*#__PURE__*/_jsxDEV(Plus, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 61\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"arifmetix\",\n      children: [product.price, \"$ x \", counter, \" = \", product.price * counter, \"$\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"btnDelete\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteProduct(product.id, counter, product.price * counter),\n        children: /*#__PURE__*/_jsxDEV(Trash, {\n          className: \"trash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CartBodyElement, \"IyrGnJkpokqYxjgjx0RFmkPy1LE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CartBodyElement;\nexport default CartBodyElement;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartBodyElement\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/components/CartPageComponents/CartBodyElement.js"],"names":["React","useState","useDispatch","useSelector","subtractProductFromCart","countGenerallyAddedProducts","subtractFromAddedProducts","addProductsToCartPage","takesDataFromInput","CartBodyElement","props","product","deleteProduct","dispatch","store","state","productsSlice","count","cartPageProducts","forEach","productObj","counter","setCounter","increase","price","array","decrease","index","indexOf","addDataWhileChanging","value","handleChange","e","Number","target","console","log","name","id"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\n// Redux \nimport { useDispatch, useSelector } from 'react-redux'\nimport {subtractProductFromCart, \n        countGenerallyAddedProducts,\n        subtractFromAddedProducts,\n        addProductsToCartPage,\n        takesDataFromInput,\n                              } from '../../features/productsSlice'\n\n// icons imports \nimport {ReactComponent as Plus} from '../../assets/plus.svg'\nimport {ReactComponent as Minus} from '../../assets/minus.svg'\nimport {ReactComponent as Trash} from '../../assets/trash.svg'\n\n\n\nconst CartBodyElement = (props) => {\n    // Props\n    const { product, deleteProduct } = props\n    // Redux\n    const dispatch = useDispatch()\n    const store = useSelector(state => state.productsSlice)\n    let count = 0\n    // Count how many current product have been added  \n    store.cartPageProducts.forEach(productObj => {\n        if(productObj === product) {\n            count += 1\n        }\n    }) \n    const [counter, setCounter] = useState(count)\n\n    // methods for adding and subtract the elements and also count them\n    const increase = () => {\n        if (counter >= 0) {\n            setCounter(counter + 1)\n            dispatch(countGenerallyAddedProducts({count: 1, price: product.price}))\n            dispatch(addProductsToCartPage({array: [product]}))\n        } \n    }\n    \n    const decrease = () => {\n        if (counter >= 1) {\n            setCounter(counter - 1)\n            dispatch(subtractProductFromCart({index: cartPageProducts.indexOf(product)}))\n            dispatch(subtractFromAddedProducts({count: 1, price: product.price}))\n        }\n    }\n\n    const addDataWhileChanging = (value) => { \n        if(value >= 0) {\n            // const array = [];\n            // for (let i = 0; i < value; i++) {\n            //     array.push(product)\n            // }\n            setCounter(value) \n            dispatch(takesDataFromInput({count: value, price: value * product.price}))\n            dispatch(subtractFromAddedProducts({count: counter, price: product.price * counter}))\n        }\n    }\n    const handleChange = (e) => {\n        addDataWhileChanging(Number(e.target.value))\n    }\n    console.log(counter)\n    return (\n        <div className=\"elementCartBody\">\n            <div className=\"cbName\"><div className=\"cpName\">NAME</div>: {product.name}</div>\n            <div className=\"plus__minus\">\n                <div className=\"minusOne\" onClick={decrease}><Minus /></div>\n                <div className=\"resultDiv\">\n                    <input \n                        className=\"result\"\n                        type=\"text\"\n                        value={counter}\n                        onChange={handleChange}         \n                    />\n                </div> \n                    \n                <div className=\"plusOne\" onClick={increase}><Plus /></div>\n            </div>\n            <div className=\"arifmetix\">\n                {product.price}$ x {counter} = {product.price * counter}$\n            </div>\n            <div className=\"btnDelete\">\n                <button onClick={() => deleteProduct(\n                    product.id, counter, product.price*counter)}>\n                    <Trash className=\"trash\" />\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default CartBodyElement"]},"metadata":{},"sourceType":"module"}