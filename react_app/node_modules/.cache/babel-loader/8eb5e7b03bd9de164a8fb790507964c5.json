{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const productsSlice = createSlice({\n  name: 'productsSlice',\n  initialState: {\n    amountAddedProducts: 0,\n    sumOfPricesAddedProducts: 0,\n    product: {},\n    cartPageProducts: [],\n    cartPageSetProducts: []\n  },\n  reducers: {\n    countGenerallyAddedProducts(state, action) {\n      state.amountAddedProducts += action.payload.count;\n      state.sumOfPricesAddedProducts += action.payload.price;\n    },\n\n    setProductToDetailsPage(state, action) {\n      state.product = action.payload.product;\n    },\n\n    addProductsToCartPage(state, action) {\n      state.cartPageProducts = [...state.cartPageProducts, ...action.payload.array];\n    },\n\n    addProductsToCartPageSet(state, action) {\n      state.cartPageSetProducts = [...state.cartPageSetProducts, action.payload.product];\n    },\n\n    decreaseProductFromDetails(state) {\n      state.cartPageProducts.slice(0, state.cartPageProducts.length - 1);\n    },\n\n    deleteProductFromCart(state, action) {\n      const {\n        id\n      } = action.payload;\n      state.cartPageSetProducts = state.cartPageSetProducts.filter(product => product.id !== id);\n      state.cartPageProducts = state.cartPageProducts.filter(product => product.id !== id);\n    },\n\n    subtractProductFromCart(state, action) {\n      state.cartPageProducts.splice(action.payload.index, 1);\n    },\n\n    subtractFromAddedProducts(state, action) {\n      state.amountAddedProducts -= action.payload.count;\n      state.sumOfPricesAddedProducts -= action.payload.price;\n    },\n\n    takesDataFromInput(state, action) {\n      const {\n        count,\n        price,\n        amount,\n        sum,\n        id,\n        array\n      } = action.payload;\n\n      if (action.payload.count) {\n        state.amountAddedProducts += count;\n        state.sumOfPricesAddedProducts += price;\n        state.cartPageProducts = [...state.cartPageProducts, ...array];\n      } else {\n        state.amountAddedProducts -= amount;\n        state.sumOfPricesAddedProducts -= sum;\n        state.cartPageProducts.filter(product => product.id !== id);\n      }\n    }\n\n  }\n});\nexport const {\n  countGenerallyAddedProducts,\n  setProductToDetailsPage,\n  addProductsToCartPage,\n  addProductsToCartPageSet,\n  decreaseProductFromDetails,\n  deleteProductFromCart,\n  subtractProductFromCart,\n  subtractFromAddedProducts,\n  takesDataFromInput\n} = productsSlice.actions;","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/features/productsSlice.js"],"names":["createSlice","productsSlice","name","initialState","amountAddedProducts","sumOfPricesAddedProducts","product","cartPageProducts","cartPageSetProducts","reducers","countGenerallyAddedProducts","state","action","payload","count","price","setProductToDetailsPage","addProductsToCartPage","array","addProductsToCartPageSet","decreaseProductFromDetails","slice","length","deleteProductFromCart","id","filter","subtractProductFromCart","splice","index","subtractFromAddedProducts","takesDataFromInput","amount","sum","actions"],"mappings":"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","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const productsSlice = createSlice({\n    name: 'productsSlice',\n    initialState: {\n        amountAddedProducts: 0,\n        sumOfPricesAddedProducts: 0,\n        product: {}, \n        cartPageProducts: [],\n        cartPageSetProducts: [],\n    }, \n    reducers: {\n        countGenerallyAddedProducts(state, action) {\n            state.amountAddedProducts += action.payload.count\n            state.sumOfPricesAddedProducts += action.payload.price\n        },\n        setProductToDetailsPage(state, action) {\n            state.product = action.payload.product\n        },\n        addProductsToCartPage(state, action) {\n            state.cartPageProducts = [...state.cartPageProducts, ...action.payload.array]\n        },\n        addProductsToCartPageSet(state, action) {\n            state.cartPageSetProducts =  [...state.cartPageSetProducts, action.payload.product]\n        },\n        decreaseProductFromDetails(state) {\n            state.cartPageProducts.slice(0, state.cartPageProducts.length - 1)\n        },\n        deleteProductFromCart(state, action) {\n            const { id } = action.payload\n            state.cartPageSetProducts = state.cartPageSetProducts.filter(product => product.id !== id)\n            state.cartPageProducts = state.cartPageProducts.filter(product => product.id !== id)\n        },\n        subtractProductFromCart(state, action) {\n            state.cartPageProducts.splice(action.payload.index, 1)\n        },\n        subtractFromAddedProducts(state, action) {\n            state.amountAddedProducts -= action.payload.count\n            state.sumOfPricesAddedProducts -= action.payload.price\n        },\n        takesDataFromInput(state, action) {\n            const { count, price, amount, sum, id, array } = action.payload\n            if(action.payload.count) {\n                state.amountAddedProducts += count\n                state.sumOfPricesAddedProducts += price\n                state.cartPageProducts = [...state.cartPageProducts, ...array]\n            }else {\n                state.amountAddedProducts -= amount\n                state.sumOfPricesAddedProducts -= sum\n                state.cartPageProducts.filter(product => product.id !== id)\n            }\n            \n        }\n    }\n}) \n\nexport const {\n    countGenerallyAddedProducts,\n    setProductToDetailsPage,\n    addProductsToCartPage,\n    addProductsToCartPageSet,\n    decreaseProductFromDetails,\n    deleteProductFromCart ,\n    subtractProductFromCart,\n    subtractFromAddedProducts,\n    takesDataFromInput\n            } = productsSlice.actions"]},"metadata":{},"sourceType":"module"}