{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/context/Context.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nexport const Context = /*#__PURE__*/React.createContext();\nexport const ACTIONS = {\n  ADD_TO_CART: 'add-to-cart',\n  ADD_PRODUCT_TO_DETAILS: 'add-product-to-details',\n  INCREMENT: 'increment',\n  DECREMENT: 'decrement',\n  SUM_OF_ADDED: 'sum_of_added',\n  DETAIL_ADD_TO_CART: 'detail-add-to-cart'\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case ACTIONS.ADD_TO_CART:\n      return;\n\n    case ACTIONS.ADD_PRODUCT_TO_DETAILS:\n      return;\n\n    case ACTIONS.INCREMENT:\n      return;\n\n    case ACTIONS.DECREMENT:\n      return;\n\n    case ACTIONS.DETAIL_ADD_TO_CART:\n      return;\n\n    default:\n      return state;\n  }\n};\n\nexport const HandleDetail = props => {\n  _s();\n\n  const useStates = {\n    count: 0,\n    sum: 0,\n    product: 0\n  };\n  const [state, dispatch] = useReducer(reducer, []); // count, sum, product, detailsCount, detailsSum \n\n  const [cart, setCart] = useState([]);\n  const values = {\n    state,\n    dispatch,\n    cart,\n    setCart\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: values,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(HandleDetail, \"O1uR6IzOVHF/IT7ImruAckCpu1c=\");\n\n_c = HandleDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"HandleDetail\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/context/Context.js"],"names":["React","useState","useReducer","Context","createContext","ACTIONS","ADD_TO_CART","ADD_PRODUCT_TO_DETAILS","INCREMENT","DECREMENT","SUM_OF_ADDED","DETAIL_ADD_TO_CART","reducer","state","action","type","HandleDetail","props","useStates","count","sum","product","dispatch","cart","setCart","values","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,UAAzB,QAA0C,OAA1C;AAGA,OAAO,MAAMC,OAAO,gBAAGH,KAAK,CAACI,aAAN,EAAhB;AAEP,OAAO,MAAMC,OAAO,GAAG;AACnBC,EAAAA,WAAW,EAAE,aADM;AAEnBC,EAAAA,sBAAsB,EAAE,wBAFL;AAGnBC,EAAAA,SAAS,EAAE,WAHQ;AAInBC,EAAAA,SAAS,EAAE,WAJQ;AAKnBC,EAAAA,YAAY,EAAE,cALK;AAMnBC,EAAAA,kBAAkB,EAAE;AAND,CAAhB;;AASP,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC/B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,OAAO,CAACC,WAAb;AACI;;AACJ,SAAKD,OAAO,CAACE,sBAAb;AACI;;AACJ,SAAKF,OAAO,CAACG,SAAb;AACI;;AACJ,SAAKH,OAAO,CAACI,SAAb;AACI;;AACJ,SAAKJ,OAAO,CAACM,kBAAb;AACI;;AACJ;AACI,aAAOE,KAAP;AAZR;AAcH,CAfD;;AAiBA,OAAO,MAAMG,YAAY,GAAIC,KAAD,IAAW;AAAA;;AACnC,QAAMC,SAAS,GAAG;AACdC,IAAAA,KAAK,EAAE,CADO;AAEdC,IAAAA,GAAG,EAAE,CAFS;AAGdC,IAAAA,OAAO,EAAE;AAHK,GAAlB;AAMA,QAAM,CAACR,KAAD,EAAQS,QAAR,IAAoBpB,UAAU,CAACU,OAAD,EAAU,EAAV,CAApC,CAPmC,CAOe;;AAElD,QAAM,CAACW,IAAD,EAAOC,OAAP,IAAkBvB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAMwB,MAAM,GAAG;AACXZ,IAAAA,KADW;AACJS,IAAAA,QADI;AACMC,IAAAA,IADN;AACYC,IAAAA;AADZ,GAAf;AAGA,sBACI,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEC,MAAzB;AAAA,cACKR,KAAK,CAACS;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAlBM;;GAAMV,Y;;KAAAA,Y","sourcesContent":["import React, {useState, useReducer} from 'react'\n\n\nexport const Context = React.createContext();\n\nexport const ACTIONS = {\n    ADD_TO_CART: 'add-to-cart',\n    ADD_PRODUCT_TO_DETAILS: 'add-product-to-details',\n    INCREMENT: 'increment',\n    DECREMENT: 'decrement',\n    SUM_OF_ADDED: 'sum_of_added',\n    DETAIL_ADD_TO_CART: 'detail-add-to-cart'\n}\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case ACTIONS.ADD_TO_CART:\n            return \n        case ACTIONS.ADD_PRODUCT_TO_DETAILS:\n            return \n        case ACTIONS.INCREMENT:\n            return \n        case ACTIONS.DECREMENT:\n            return \n        case ACTIONS.DETAIL_ADD_TO_CART:\n            return \n        default:\n            return state;\n    }\n}\n\nexport const HandleDetail = (props) => {\n    const useStates = {\n        count: 0,\n        sum: 0,\n        product: 0,\n        \n    }\n    const [state, dispatch] = useReducer(reducer, []) // count, sum, product, detailsCount, detailsSum \n\n    const [cart, setCart] = useState([])\n    const values = {\n        state, dispatch, cart, setCart\n    }\n    return (\n        <Context.Provider value={values}>\n            {props.children}\n        </Context.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}