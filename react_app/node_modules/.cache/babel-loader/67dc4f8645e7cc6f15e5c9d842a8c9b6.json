{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const apiSlice = createSlice({\n  name: 'api',\n  initialState: {\n    products: [],\n    error: null,\n    loading: false\n  },\n  reducers: {\n    fetchProductsRequest(state) {\n      state.loading = true;\n    },\n\n    fetchProductsError(state, action) {\n      state.loading = false;\n      state.error = action.payload.error;\n      state.products = [];\n    },\n\n    fetchProductsSuccess(state, action) {\n      state.loading = false;\n      state.products = action.payload.products;\n      state.error = null;\n    }\n\n  }\n});\nexport const {\n  fetchProductsSuccess,\n  fetchProductsRequest,\n  fetchProductsError\n} = apiSlice.actions;","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/features/apiSlice.js"],"names":["createSlice","apiSlice","name","initialState","products","error","loading","reducers","fetchProductsRequest","state","fetchProductsError","action","payload","fetchProductsSuccess","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,OAAO,MAAMC,QAAQ,GAAGD,WAAW,CAAC;AAChCE,EAAAA,IAAI,EAAE,KAD0B;AAEhCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,KAAK,EAAE,IAFG;AAGVC,IAAAA,OAAO,EAAE;AAHC,GAFkB;AAOhCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,oBAAoB,CAACC,KAAD,EAAQ;AACxBA,MAAAA,KAAK,CAACH,OAAN,GAAgB,IAAhB;AACH,KAHK;;AAINI,IAAAA,kBAAkB,CAACD,KAAD,EAAQE,MAAR,EAAgB;AAC9BF,MAAAA,KAAK,CAACH,OAAN,GAAgB,KAAhB;AACAG,MAAAA,KAAK,CAACJ,KAAN,GAAcM,MAAM,CAACC,OAAP,CAAeP,KAA7B;AACAI,MAAAA,KAAK,CAACL,QAAN,GAAiB,EAAjB;AACH,KARK;;AASNS,IAAAA,oBAAoB,CAACJ,KAAD,EAAQE,MAAR,EAAgB;AAChCF,MAAAA,KAAK,CAACH,OAAN,GAAgB,KAAhB;AACAG,MAAAA,KAAK,CAACL,QAAN,GAAiBO,MAAM,CAACC,OAAP,CAAeR,QAAhC;AACAK,MAAAA,KAAK,CAACJ,KAAN,GAAc,IAAd;AACH;;AAbK;AAPsB,CAAD,CAA5B;AAwBP,OAAO,MAAM;AAAEQ,EAAAA,oBAAF;AAAwBL,EAAAA,oBAAxB;AAA+CE,EAAAA;AAA/C,IAAqET,QAAQ,CAACa,OAApF","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\n\nexport const apiSlice = createSlice({\n    name: 'api',\n    initialState: {\n        products: [],\n        error: null,\n        loading: false,\n    },\n    reducers: {\n        fetchProductsRequest(state) {\n            state.loading = true\n        },\n        fetchProductsError(state, action) {\n            state.loading = false\n            state.error = action.payload.error \n            state.products = []\n        },\n        fetchProductsSuccess(state, action) {\n            state.loading = false\n            state.products = action.payload.products\n            state.error = null\n        }\n    }\n})\n\nexport const { fetchProductsSuccess, fetchProductsRequest,  fetchProductsError} = apiSlice.actions"]},"metadata":{},"sourceType":"module"}