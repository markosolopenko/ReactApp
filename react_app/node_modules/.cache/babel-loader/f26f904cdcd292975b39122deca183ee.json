{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/marko/projects/ReactDevelop/react_app/src/components/Forms/formForAddOrEditProduct/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\n\nconst FormForAddAndEditProduct = ({\n  initState,\n  handleSubmit,\n  form\n}) => {\n  _s();\n\n  const forma = useRef();\n  console.log(forma.current);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      ref: forma,\n      defaultValues: initState,\n      initialValues: initState,\n      validationSchema: Yup.object({\n        name: Yup.string().min(3, 'Required Min 3 symbols!!!').max(20, 'Max available 20 symbols!!!').required('Required!!!'),\n        price: Yup.number().typeError('Type error. Must be a number!!!').min(0, 'Negaive numbers doesn\\'t allowed!!!').required('Reqiured!!!'),\n        origin: Yup.string().oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\").required('Required!!!')\n      }),\n      onSubmit: (values, {\n        setSubmitting,\n        resetForm\n      }) => {\n        setSubmitting(true);\n        handleSubmit(values);\n        setSubmitting(false);\n        setTimeout(() => {\n          window.location.reload();\n        }, 1000);\n      },\n      children: ({\n        isSubmitting,\n        dirty,\n        resetForm,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"addProductForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          className: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"name\",\n          type: \"text\",\n          className: \"inputField\",\n          autoComplete: \"off\",\n          placeholder: \"Product Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"name\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMessage\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"price\",\n          className: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"price\",\n          type: \"text\",\n          className: \"inputField\",\n          autoComplete: \"off\",\n          placeholder: \"Product Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"price\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMessage\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"origin\",\n          className: \"label\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"origin\",\n          as: \"select\",\n          className: \"originsField\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            className: \"optionOrigin\",\n            children: \"Select origin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ASIA\",\n            className: \"optionOrigin\",\n            children: \"ASIA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"USA\",\n            className: \"optionOrigin\",\n            children: \"USA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"EUROPE\",\n            className: \"optionOrigin\",\n            children: \"EUROPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AFRICA\",\n            className: \"optionOrigin\",\n            children: \"AFRICA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          name: \"origin\",\n          children: msg => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"errorMessage\",\n            children: msg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"submitForm\",\n          disabled: isSubmitting || !dirty,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"reset\",\n          className: \"resetFormButton\",\n          onClick: () => {\n            resetForm({\n              values: initState\n            });\n          },\n          children: \"RESET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancelChangesButton\",\n          onClick: () => {\n            form.current.style.display = '';\n            resetForm({\n              values: initState\n            });\n          },\n          children: \"CANCEL\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n};\n\n_s(FormForAddAndEditProduct, \"jwdLEwtOxEdhx4HDC8K4+eJ4tnY=\");\n\n_c = FormForAddAndEditProduct;\nexport default FormForAddAndEditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormForAddAndEditProduct\");","map":{"version":3,"sources":["/home/marko/projects/ReactDevelop/react_app/src/components/Forms/formForAddOrEditProduct/Form.js"],"names":["React","useRef","Formik","Field","Form","ErrorMessage","Yup","FormForAddAndEditProduct","initState","handleSubmit","form","forma","console","log","current","object","name","string","min","max","required","price","number","typeError","origin","oneOf","values","setSubmitting","resetForm","setTimeout","window","location","reload","isSubmitting","dirty","msg","style","display"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport './addOrEditForm.css';\n\n\nconst FormForAddAndEditProduct = ({initState, handleSubmit, form}) => {\n    const forma = useRef() \n    console.log(forma.current);\n    return (\n      <div className=\"form\">\n        <Formik ref={forma}\n          defaultValues={initState}\n          initialValues={initState}\n          validationSchema={Yup.object({\n            name: Yup.string()\n            .min(3, 'Required Min 3 symbols!!!')\n            .max(20, 'Max available 20 symbols!!!')\n            .required('Required!!!'),\n            price: Yup.number()\n              .typeError('Type error. Must be a number!!!')\n              .min(0, 'Negaive numbers doesn\\'t allowed!!!')\n              .required('Reqiured!!!'),\n            origin: Yup.string()\n              .oneOf(['ASIA', 'USA', 'EUROPE', 'AFRICA'], \"Invalid Origin\")\n              .required('Required!!!')\n          })}\n          onSubmit={(values, {setSubmitting, resetForm} )=> {\n              setSubmitting(true)\n              handleSubmit(values)\n              setSubmitting(false)\n              setTimeout(() => {\n                window.location.reload()\n              }, 1000)\n          }}\n        >\n        {({ isSubmitting, dirty, resetForm, values }) => (\n          <Form className=\"addProductForm\">\n            <label htmlFor=\"name\" className=\"label\"></label>\n            <Field \n                name=\"name\" \n                type=\"text\" \n                className=\"inputField\"\n                autoComplete=\"off\"\n                placeholder=\"Product Name\" \n            />\n            <ErrorMessage name=\"name\">\n              {msg => <div className=\"errorMessage\">{msg}</div>}\n            </ErrorMessage>\n            <label htmlFor=\"price\" className=\"label\"></label>\n            <Field \n                name=\"price\" \n                type=\"text\" \n                className=\"inputField\" \n                autoComplete=\"off\"\n                placeholder=\"Product Price\" \n            />\n            <ErrorMessage name=\"price\" >\n              {msg => <div className=\"errorMessage\">{msg}</div>}\n            </ErrorMessage>\n            <label htmlFor=\"origin\" className=\"label\"></label>\n            <Field name=\"origin\" as=\"select\" className=\"originsField\">\n              <option value=\"\" className=\"optionOrigin\">Select origin</option>\n              <option value=\"ASIA\" className=\"optionOrigin\">ASIA</option>\n              <option value=\"USA\" className=\"optionOrigin\">USA</option>\n              <option value=\"EUROPE\" className=\"optionOrigin\">EUROPE</option>\n              <option value=\"AFRICA\" className=\"optionOrigin\">AFRICA</option>\n            </Field>\n            <ErrorMessage name=\"origin\">\n              {msg => <div className=\"errorMessage\">{msg}</div>}\n            </ErrorMessage>\n            <button \n              type=\"submit\" \n              className=\"submitForm\"\n              disabled={isSubmitting || !dirty}\n            >\n              Submit\n            </button>\n            <button \n                type=\"reset\" \n                className=\"resetFormButton\"\n                onClick={() => {\n                  resetForm({values: initState})\n                }}\n            >\n                RESET\n            </button>\n            <button \n                type=\"button\" \n                className=\"cancelChangesButton\"\n                onClick={() => {\n                  form.current.style.display = ''\n                  resetForm({values: initState})\n                }}\n            >\n                CANCEL\n            </button>\n          </Form>\n        )}\n        </Formik>\n      </div>\n    )\n}\n\nexport default FormForAddAndEditProduct"]},"metadata":{},"sourceType":"module"}